---
AWSTemplateFormatVersion: '2010-09-09'

Description: Blocks UI Server Node Network

Parameters:
  ImageTag:
    Description: ARN for the node container in ECR
    Type: String
  CertificateARN:
    Description: The ARN for the certificate.
    Default: 'arn:aws:acm:us-east-1:288140218613:certificate/a62d358e-f562-4e40-a4ad-47c6f0baf747'
    Type: String
  ChainName:
    Description: What blockchain should be used
    Type: String
    AllowedValues:
      - ethereum
      - polygon
  NetworkName:
    Description: The network to use for the selected blockchain
    Default: mainnet
    Type: String
    AllowedValues:
      - mainnet
      - goerli
      - mumbai
  DomainName:
    Default: 'blocksui.io'
    Description: The FQDN for this website
    Type: String
  Subdomain:
    Default: '*'
    Description: The Subdomain for the chosen domain
    Type: String
  MaxTaskCount:
    Default: 20
    Description: Maximim amount of node tasks to run
    Type: String
  MinTaskCount:
    Default: 1
    Description: Minimum amount of node tasks to run
    Type: String
  ContractsCid:
    Description: CID for the folder where the Contract ABIs live
    Type: String
  PrimitivesCid:
    Description: Block Primitives directory CID
    Type: String
  ProviderUrl:
    Description: RPC provider URL
    Type: String
  RecoveryPhrase:
    Description: Wallet mnemonic for account recovery
    Type: String
  Web3StorageToken:
    Description: Web3.Storage API token
    Type: String


Resources:
  VPC:
    Description: Create the VPC for BlocksUI Network
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://bui-network.s3.${AWS::Region}.amazonaws.com/vpc.yml'

  NodeCluster:
    Description: Create the ECS cluster, service, and tasks
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ChainName: !Ref ChainName
        ContractsCid: !Ref ContractsCid
        NetworkName: !Ref NetworkName
        PrimitivesCid: !Ref PrimitivesCid
        ProviderUrl: !Ref ProviderUrl
        RecoveryPhrase: !Ref RecoveryPhrase
        Web3StorageToken: !Ref Web3StorageToken
        ContainerName: blocksui-server-node
        Image: !Sub '288140218613.dkr.ecr.${AWS::Region}.amazonaws.com/blocksui-server-node:${ImageTag}'
        MaxTaskCount: !Ref MaxTaskCount
        MinTaskCount: !Ref MinTaskCount
        SecurityGroup: !GetAtt VPC.Outputs.NodeSecurityGroup
        EFSSecurityGroup: !GetAtt VPC.Outputs.MountTargetSecurityGroup
        Subnets: !Join
          - ','
          - - !GetAtt VPC.Outputs.PublicSubnet0
            - !GetAtt VPC.Outputs.PublicSubnet1
        VpcId: !GetAtt VPC.Outputs.VpcId
      TemplateURL: !Sub 'https://bui-network.s3.${AWS::Region}.amazonaws.com/node_cluster.yml'

  # ------------------
  # CloudFront config

  CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 86400
        MaxTTL: 86400
        MinTTL: 86400
        Name: BlocksUI-Server-Node-Cache-Policy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all

  OriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: allViewer
        Name: BlocksUI-OriginReqPolicy
        QueryStringsConfig:
          QueryStringBehavior: all

  ResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        CorsConfig:
          AccessControlAllowCredentials: true
          AccessControlAllowHeaders:
            Items:
              - 'Origin'
              - 'X-Requested-With'
              - 'Content-Type'
              - 'Accept'
          AccessControlAllowMethods:
            Items:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          AccessControlAllowOrigins:
            Items:
              - '*'
          OriginOverride: false
        Name: blocksui-server-response-headers-policy

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub '${Subdomain}.${DomainName}'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId: !Ref CachePolicy
          Compress: true
          DefaultTTL: 86400
          MaxTTL: 31536000
          OriginRequestPolicyId: !Ref OriginRequestPolicy
          ResponseHeadersPolicyId: !Ref ResponseHeadersPolicy
          TargetOriginId: !GetAtt NodeCluster.Outputs.AlbArn
          ViewerProtocolPolicy: 'redirect-to-https'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: 'index.html'
        IPV6Enabled: true
        Logging:
          Bucket: !ImportValue 's3-crcls-logs-domain'
          Prefix: bui/nodes
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !GetAtt NodeCluster.Outputs.AlbDomain
            Id: !GetAtt NodeCluster.Outputs.AlbArn
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateARN
          MinimumProtocolVersion: 'TLSv1.2_2018'
          SslSupportMethod: 'sni-only'

  Route53ARecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        EvaluateTargetHealth: false
        # The  following HosteZoneId is always used for alias records pointing to CF.
        HostedZoneId: 'Z2FDTNDATAQYW2'
      HostedZoneName: !Sub '${DomainName}.'
      Name: !Ref DomainName
      Type: 'A'

Outputs:
  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomain:
    Description: CloudFront distribution domain
    Value: !GetAtt CloudFrontDistribution.DomainName
