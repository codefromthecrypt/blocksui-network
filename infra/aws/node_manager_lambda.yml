---
AWSTemplateFormatVersion: '2010-09-09'

Description: 'Create a versioned Lambda and LambdaAlias'

Parameters:
  Concurrency:
    Default: 5
    Type: String
  MemorySize:
    Type: Number
    Default: 1024
  Runtime:
    Type: String
    Default: go1.x
    AllowedValues:
      - go1.x
      - nodejs14.x
  SecurityGroupIds:
    Type: String
  SecurityRoleArn:
    Description: The execution role for the lambda
    Type: String
  SubnetIds:
    Type: String
  Version:
    Type: String

Resources:
  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: DISABLED
      FileSystemTags:
        - Key: Name
          Value: 'crcls-node-store'
      PerformanceMode: generalPurpose
      ThroughputMode: bursting

  MountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [0, !Split [',', !Ref Subnets]]
      FileSystemId: !Ref FileSystem

  MountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Select [1, !Split [',', !Ref Subnets]]
      FileSystemId: !Ref FileSystem

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: crcls-node
        S3Key: !Sub "NodeManager/${Version}.zip"
      Description: Lambda function for this service
      Environment:
        Variables:
          ENC: "{{resolve:secretsmanager:enc:SecretString}}"
      FileSystemConfig:
        Arn: !GetAtt FileSystem.Arn
        LocalMountPoint: '/crcls'
      FunctionName: !Sub "crcls-node-NodeManager-prod"
      Handler: "handler"
      MemorySize: !Ref MemorySize
      ReservedConcurrentExecutions: !Ref Concurrency
      Role: !Ref SecurityRoleArn
      Runtime: !Ref Runtime
      Tags:
        - Key: Application
          Value: crcls-node
        - Key: Service
          Value: NodeManager
        - Key: Version
          Value: !Ref Version
        - Key: Group
          Value: Services
      Timeout: 60
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds: !Split [',', !Ref SecurityGroupIds]
        SubnetIds: !Split [',', !Ref SubnetIds]

  LambdaVersion:
    Type: Custom::LambdaVersion
    Properties:
      ServiceToken: !ImportValue { "Fn::Sub": "${AWS::Region}-LambdaVersionBump-AliasArn" }
      FunctionArn: !GetAtt LambdaFunction.Arn
      Description: !Ref Version
  LambdaAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref LambdaFunction
      FunctionVersion: !GetAtt LambdaVersion.Version
      Name: !Sub "crcls-node-NodeManager-Alias-prod"

Outputs:
  Arn:
    Description: The ARN of this Lambda
    Value: !GetAtt LambdaFunction.Arn
  AliasArn:
    Description: The ARN for the alias to this lambda
    Value: !Ref LambdaAlias
  LambdaVersion:
    Description: The latest version published for this lambda
    Value: !GetAtt LambdaVersion.Version
  ResourceName:
    Description: The resource name of this Lambda
    Value: !Ref LambdaFunction
