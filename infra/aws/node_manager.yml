---
AWSTemplateFormatVersion: '2010-09-09'

Description: CRCLS Decentralized Node Manager

Parameters:
  CertificateArn:
    Description: The CRCLS services SSL certificate ARN
    Default: "arn:aws:acm:ca-central-1:288140218613:certificate/3d173a54-1b7f-48b5-8ed8-759ba8e009b8"
    Type: String
  FQDN:
    Description: The FQDN for the Node Manager
    Default: "nodes.crcls.services"
    Type: String
  HostedZoneID:
    Description: The Route53 hosted zone ID
    Type: List<AWS::Route53::HostedZone::Id>
  SecurityGroups:
    Description: The security groups for the Node Manager API
    Type: List<AWS::EC2::SecurityGroup::Id>
  Subnets:
    Description: The subnets for the Node Manager
    Type: List<AWS::EC2::Subnet::Id>
  Version:
    Description: Lambda version
    Type: String

Resources:
  API:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::Region}-NodeManager-Api"
      ProtocolType: HTTP
      DisableExecuteApiEndpoint: true
      Tags:
        Name: !Sub "${AWS::Region}-NodeManager-Api"

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref API
      AutoDeploy: true
      Description: Production
      StageName: prod
      Tags:
        Name: !Sub "${AWS::Region}-NodeManager-Stage-Production"

  Domain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !Ref FQDN
      DomainNameConfigurations:
        - CertificateArn: !Ref CertificateArn
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2
      Tags:
        Name: !Sub "${AWS::Region}-NodeManager-Domain"

  AddRecordSetToHostedZone:
    Type: AWS::Route53::RecordSet
    Description: Add an alias record set to to point to the domain.
    DependsOn: Domain
    Properties:
      AliasTarget:
        DNSName: !GetAtt Domain.RegionalDomainName
        HostedZoneId: !GetAtt Domain.RegionalHostedZoneId
      HostedZoneId: !Select [0, !Ref HostHostedZoneIds]
      Name: !Ref FQDN
      Type: A

  MapAPIToDomain:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId: !Ref API
      DomainName: !Ref Domain
      Stage: !Ref Stage

  Lambda:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Runtime: go1.x
        SecurityGroupIds: !Ref SecurityGroups
        SecurityRoleArn: !ImportValue "crcls-ServiceLambdaRole-V1-Arn"
        SubnetIds: !Ref Subnets
        Version: !Ref Version
      TemplateURL: !Sub 'https://crcls-node.s3/${AWS::Region}.amazonaws.com/infra/node_manager_lambda.yml'

  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref API
      Description: Integrate with the Lambda
      IntegrationMethod: ANY
      IntegrationType: AWS
      IntegrationUri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Lambda.Outputs.Arn}/invocations'
      PayloadFormatVersion: '1.0'
      TlsConfig:
        ServerNameToVerify: 'nodes.crcls.services'
